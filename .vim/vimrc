"" Source vimrc automatically
autocmd! bufwritepost ~/.vim/vimrc source %

" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>
map <Leader>t <esc>:tabnew<CR>

" map sort function to a key
vnoremap <Leader>s :sort<CR>

" Show whitespace
" MUST be inserted BEFORE the colorscheme command
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/

" Split to the right and bottom
set splitright
set splitbelow

" Line number at cursor line and relative numbering for the rest of the lines
set number
set relativenumber

"change default indentation
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab

" Better indentation edition
vnoremap < <gv
vnoremap > >gv

" Improved search
set hlsearch " Keep search highlight once done with search
set incsearch " Highlight as you type search
set ignorecase " Ignore case if search string is lowercase
set smartcase " Don't ignore case if search string has uppercase
nnoremap <esc><esc> :noh<return> " Press esc twice to disable highlight

" disable folding
set nofoldenable

" make focused window slightly wider
au! winenter * :vertical resize 120<CR>

" enable project-specific features
set exrc

call plug#begin('~/.vim/plugged')

"Plug 'tpope/vim-sensible'
Plug 'christoomey/vim-tmux-navigator' " C-{h,j,k,l} hotkeys for tmux and vim navigation
"Plug 'blueshirts/darcula' " Jetbrains like colorscheme
Plug 'vim-airline/vim-airline'
Plug 'sheerun/vim-polyglot' " filetype language packs (syntax and indent)
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim' " Fuzzy search
"Plug 'fxn/vim-monochrome' " Monochrome colorscheme
"Plug 'mattn/emmet-vim' " HTML CSS
"Plug 'davidhalter/jedi-vim', {'tag': '0.9.0'} " Python ide
"Plug 'hdima/python-syntax' " Highlight self in python classes
"Plug 'nvie/vim-flake8' " Pep8 checks
"Plug 'lervag/vimtex' " Latex stuff
Plug 'dense-analysis/ale' " Linting
" Following 3 are for autocomplete
"Plug 'Shougo/deoplete.nvim'
"Plug 'roxma/nvim-yarp'
"Plug 'roxma/vim-hug-neovim-rpc'
"Plug 'SirVer/ultisnips' " Snippets engine
"Plug 'honza/vim-snippets' " Snippets bundle (used by ultisnips)
Plug 'arcticicestudio/nord-vim'
call plug#end()

" polyglot uses latexbox, which conflicts with vimlatex
"let g:polyglot_disabled = ['latex']

colorscheme nord
set termguicolors

" enabling deoplete
"let g:deoplete#enable_at_startup = 1
"let g:deoplete#enable_smart_case = 1
"let g:deoplete#disable_auto_complete = 1
"inoremap <expr> <Tab>  pumvisible() ? "\<C-n>" : deoplete#manual_complete()
"inoremap <expr> <S-Tab>  pumvisible() ? "\<C-p>" : "\<S-Tab>"

" enable deoplete for vim
" This is new style
"call deoplete#custom#var('omni', 'input_patterns', {
"    \ 'tex': g:vimtex#re#deoplete
"    \})

" compile latex in a separate directory
"let g:vimtex_compiler_latexmk = {
"    \ 'build_dir' : 'build',
"    \}

" This should be the last line
set secure " From this point onwards disable unsecure commands (for project specific configurations)
